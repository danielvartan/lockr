[{"path":[]},{"path":"https://danielvartan.github.io/lockr/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://danielvartan.github.io/lockr/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://danielvartan.github.io/lockr/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://danielvartan.github.io/lockr/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official email address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://danielvartan.github.io/lockr/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement danvartan@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://danielvartan.github.io/lockr/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://danielvartan.github.io/lockr/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://danielvartan.github.io/lockr/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://danielvartan.github.io/lockr/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://danielvartan.github.io/lockr/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://danielvartan.github.io/lockr/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://danielvartan.github.io/lockr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to lockr","title":"Contributing to lockr","text":"First , thanks considering contributing lockr! 👍 ’s people like make rewarding us - project maintainers - work lockr. 😊 lockr open source project, maintained people care. directly funded .","code":""},{"path":"https://danielvartan.github.io/lockr/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to lockr","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://danielvartan.github.io/lockr/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How You Can Contribute","title":"Contributing to lockr","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://danielvartan.github.io/lockr/CONTRIBUTING.html","id":"share-the-love-️","dir":"","previous_headings":"How You Can Contribute","what":"Share the Love ❤️","title":"Contributing to lockr","text":"Think lockr useful? Let others discover , telling person, via Twitter blog post. Using lockr paper writing? Consider citing .","code":""},{"path":"https://danielvartan.github.io/lockr/CONTRIBUTING.html","id":"propose-an-idea-","dir":"","previous_headings":"How You Can Contribute","what":"Propose an Idea 💡","title":"Contributing to lockr","text":"idea new lockr feature? Take look documentation [issue list][issue] see isn’t included suggested yet. , suggest idea [issue GitHub][issue]. can’t promise implement idea, helps : Explain detail work Keep scope narrow possible See want contribute code idea well.","code":""},{"path":"https://danielvartan.github.io/lockr/CONTRIBUTING.html","id":"report-a-bug-","dir":"","previous_headings":"How You Can Contribute","what":"Report a Bug 🐛","title":"Contributing to lockr","text":"Using lockr discovered bug? ’s annoying! Don’t let others experience report issue GitHub can fix . good bug report makes easier us , please include: content utils::sessionInfo(). details local setup might helpful troubleshooting. Detailed steps reproduce bug (Tip: use reprex package).","code":""},{"path":"https://danielvartan.github.io/lockr/CONTRIBUTING.html","id":"improve-the-documentation-","dir":"","previous_headings":"How You Can Contribute","what":"Improve the Documentation 📖","title":"Contributing to lockr","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"https://danielvartan.github.io/lockr/CONTRIBUTING.html","id":"the-website","dir":"","previous_headings":"How You Can Contribute > Improve the Documentation 📖","what":"The Website","title":"Contributing to lockr","text":"website generated pkgdown. means don’t write html: Content pulled together documentation code, vignettes, Markdown files, package DESCRIPTION _pkgdown.yml settings. know way around pkgdown, can propose file change improve documentation.","code":""},{"path":"https://danielvartan.github.io/lockr/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"How You Can Contribute > Improve the Documentation 📖","what":"Function Documentation","title":"Contributing to lockr","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository Look file function Propose file change update function documentation roxygen comments (starting #')","code":""},{"path":"https://danielvartan.github.io/lockr/CONTRIBUTING.html","id":"contribute-code-","dir":"","previous_headings":"How You Can Contribute","what":"Contribute Code 📝","title":"Contributing to lockr","text":"Care fix bugs implement new functionality lockr? Awesome! 👏 look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"https://danielvartan.github.io/lockr/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development Guidelines","title":"Contributing to lockr","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream main Open project RStudio IDE choice Write code Test code (Bonus points adding unit tests) Document code (See function documentation ) Check code devtools::check() aim 0 errors, warnings notes Commit push changes Submit pull request Also note use tidyverse design guide tidyverse style guide. code must conform principles rules.","code":""},{"path":"https://danielvartan.github.io/lockr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Daniel Vartanian Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://danielvartan.github.io/lockr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Vartanian. Author, maintainer, conceptor, copyright holder.","code":""},{"path":"https://danielvartan.github.io/lockr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vartanian, D.. (2025). {lockr}: Easily encrypt/decrypt files. R package. https://danielvartan.github.io/lockr/","code":"@Misc{,   title = {{lockr}: Easily encrypt/decrypt files},   author = {Daniel Vartanian},   year = {2025},   url = {https://danielvartan.github.io/lockr/},   note = {R package}, }"},{"path":[]},{"path":"https://danielvartan.github.io/lockr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Easily Encrypt/Decrypt Files","text":"lockr user-friendly R package designed encrypting/decrypting files.","code":""},{"path":"https://danielvartan.github.io/lockr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easily Encrypt/Decrypt Files","text":"can install lockr using remotes package:","code":"remotes::install_github(\"danielvartan/lockr\")"},{"path":"https://danielvartan.github.io/lockr/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Easily Encrypt/Decrypt Files","text":"lockr code released MIT license.","code":""},{"path":"https://danielvartan.github.io/lockr/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Easily Encrypt/Decrypt Files","text":"Contributions welcome, including bug reports. Take moment review Guidelines Contributing.  Become lockr supporter! Click make donation. Please indicate lockr package donation message.","code":""},{"path":"https://danielvartan.github.io/lockr/reference/lock_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Encrypt or decrypt all files in a directory — lock_dir","title":"Encrypt or decrypt all files in a directory — lock_dir","text":"WARNING: function must used caution! Check parameters carefully. lock_dir() unlock_dir() can encrypt decrypt files given directory.","code":""},{"path":"https://danielvartan.github.io/lockr/reference/lock_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encrypt or decrypt all files in a directory — lock_dir","text":"","code":"lock_dir(   dir = \"./inst/extdata\",   public_key = \"./inst/ssh/id_rsa.pub\",   suffix = \".lockr\",   remove_file = TRUE )  unlock_dir(   dir = \"./inst/extdata\",   private_key = \"./inst/ssh/id_rsa\",   suffix = \".lockr\",   remove_file = TRUE,   password = NULL )"},{"path":"https://danielvartan.github.io/lockr/reference/lock_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encrypt or decrypt all files in a directory — lock_dir","text":"dir string indicating directory encrypt/decrypt. (default: \"./inst/extdata\"). public_key (optional) openssl RSA public key string specifying public key path. See rsa_keygen() learn create RSA key pair (default: \"./inst/ssh/id_rsa.pub\"). suffix (optional) string specifying suffix added (encrypting)/removed (decrypting) /file. must start . (default: \".lockr\"). remove_file (optional) logical value indicating original file must removed encryption/decryption process (default: TRUE). private_key (optional) openssl RSA private key string specifying private key path. See rsa_keygen() learn create RSA key pair (default: \"./inst/ssh/id_rsa\"). password (optional) protected keys. string specifying password read private key. Avoid typing passwords console, use askpass() instead (default: NULL).","code":""},{"path":"https://danielvartan.github.io/lockr/reference/lock_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encrypt or decrypt all files in a directory — lock_dir","text":"invisible NULL. functions called just side effects.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/lockr/reference/lock_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Encrypt or decrypt all files in a directory — lock_dir","text":"","code":"## Locking files  ssh_dir <- tempfile(\"ssh\") dir.create(ssh_dir) rsa_keygen(ssh_dir) #> Keys successfully created at '/tmp/RtmpoFK8iT/ssh1d2e2c4b6368'.  temp_dir <- tempfile(\"dir\") dir.create(temp_dir) for (i in seq(5)) {     file.create(tempfile(tmpdir = temp_dir)) } list.files(temp_dir) #> [1] \"file1d2e20521a37\" \"file1d2e3154c9e7\" \"file1d2e46d7c588\" \"file1d2e572aae5f\" #> [5] \"file1d2e66e179d6\"  lock_dir(temp_dir, public_key = file.path(ssh_dir, \"id_rsa.pub\")) #> Locked file written at #> '/tmp/RtmpoFK8iT/dir1d2e430cb4d3/file1d2e20521a37.lockr'. #> Locked file written at #> '/tmp/RtmpoFK8iT/dir1d2e430cb4d3/file1d2e3154c9e7.lockr'. #> Locked file written at #> '/tmp/RtmpoFK8iT/dir1d2e430cb4d3/file1d2e46d7c588.lockr'. #> Locked file written at #> '/tmp/RtmpoFK8iT/dir1d2e430cb4d3/file1d2e572aae5f.lockr'. #> Locked file written at #> '/tmp/RtmpoFK8iT/dir1d2e430cb4d3/file1d2e66e179d6.lockr'.  ## Unlocking files  unlock_dir(temp_dir, private_key = file.path(ssh_dir, \"id_rsa\")) #> Unlocked file written at '/tmp/RtmpoFK8iT/dir1d2e430cb4d3/file1d2e20521a37'. #> Unlocked file written at '/tmp/RtmpoFK8iT/dir1d2e430cb4d3/file1d2e3154c9e7'. #> Unlocked file written at '/tmp/RtmpoFK8iT/dir1d2e430cb4d3/file1d2e46d7c588'. #> Unlocked file written at '/tmp/RtmpoFK8iT/dir1d2e430cb4d3/file1d2e572aae5f'. #> Unlocked file written at '/tmp/RtmpoFK8iT/dir1d2e430cb4d3/file1d2e66e179d6'."},{"path":"https://danielvartan.github.io/lockr/reference/lock_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Encrypt or decrypt single files — lock_file","title":"Encrypt or decrypt single files — lock_file","text":"lock_file() unlock_file can encrypt/decrypt kind file using RSA key pair. project RSA key pair, can use rsa_keygen() create one. functions use encrypt_envelope() / decrypt_envelope() perform file encryption/decryption. See functions learn encrypting/decrypting process.","code":""},{"path":"https://danielvartan.github.io/lockr/reference/lock_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encrypt or decrypt single files — lock_file","text":"","code":"lock_file(   file,   public_key = \"./inst/ssh/id_rsa.pub\",   suffix = \".lockr\",   remove_file = TRUE )  unlock_file(   file,   private_key = \"./inst/ssh/id_rsa\",   suffix = \".lockr\",   remove_file = TRUE,   password = NULL )"},{"path":"https://danielvartan.github.io/lockr/reference/lock_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encrypt or decrypt single files — lock_file","text":"file string file path encrypted/decrypted. security reasons, encrypted files must end suffix parameter. public_key (optional) openssl RSA public key string specifying public key path. See rsa_keygen() learn create RSA key pair (default: \"./inst/ssh/id_rsa.pub\"). suffix (optional) string specifying suffix added (encrypting)/removed (decrypting) /file. must start . (default: \".lockr\"). remove_file (optional) logical value indicating original file must removed encryption/decryption process (default: TRUE). private_key (optional) openssl RSA private key string specifying private key path. See rsa_keygen() learn create RSA key pair (default: \"./inst/ssh/id_rsa\"). password (optional) protected keys. string specifying password read private key. Avoid typing passwords console, use askpass() instead (default: NULL).","code":""},{"path":"https://danielvartan.github.io/lockr/reference/lock_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encrypt or decrypt single files — lock_file","text":"invisible string containing locked/unlocked file path.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/lockr/reference/lock_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Encrypt or decrypt single files — lock_file","text":"","code":"## Locking files  temp_dir <- tempfile(\"dir\") dir.create(temp_dir) temp_file <- tempfile(tmpdir = temp_dir) rsa_keygen(temp_dir) #> Keys successfully created at '/tmp/RtmpoFK8iT/dir1d2e769eaf45'.  con <- file(temp_file, \"w+\") cat(\"Test\", file = temp_file, sep = \"\\n\") list.files(temp_dir) #> [1] \"file1d2e549e8d73\" \"id_rsa\"           \"id_rsa.pub\"       suppressWarnings(readLines(con)) #> [1] \"Test\" close(con)  lock_file(temp_file, public_key = file.path(temp_dir, \"id_rsa.pub\")) #> Locked file written at #> '/tmp/RtmpoFK8iT/dir1d2e769eaf45/file1d2e549e8d73.lockr'.  temp_file_locked <- paste0(temp_file, \".lockr\") con <- file(temp_file_locked, \"rb\") list.files(temp_dir) #> [1] \"file1d2e549e8d73.lockr\" \"id_rsa\"                 \"id_rsa.pub\"             suppressWarnings(readLines(con)) #> [1] \"\\037\\x8b\\b\" close(con)  ## Unlocking files  unlock_file(temp_file_locked, private_key = file.path(temp_dir, \"id_rsa\")) #> Unlocked file written at '/tmp/RtmpoFK8iT/dir1d2e769eaf45/file1d2e549e8d73'.  list.files(temp_dir) #> [1] \"file1d2e549e8d73\" \"id_rsa\"           \"id_rsa.pub\"       con <- file(temp_file, \"r+\") readLines(con) #> [1] \"Test\" close(con)"},{"path":"https://danielvartan.github.io/lockr/reference/lockr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"lockr: Easily Encrypt/Decrypt Files — lockr-package","title":"lockr: Easily Encrypt/Decrypt Files — lockr-package","text":"user-friendly toolkit encrypt/decrypt files, specially made research compendiums.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/lockr/reference/lockr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"lockr: Easily Encrypt/Decrypt Files — lockr-package","text":"Maintainer: Daniel Vartanian danvartan@gmail.com (ORCID) [conceptor, copyright holder]","code":""},{"path":"https://danielvartan.github.io/lockr/reference/rsa_keygen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate and write a pair of RSA keys — rsa_keygen","title":"Generate and write a pair of RSA keys — rsa_keygen","text":"rsa_keygen() generates pair RSA (Rivest-Shamir-Adleman) private public keys project.","code":""},{"path":"https://danielvartan.github.io/lockr/reference/rsa_keygen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate and write a pair of RSA keys — rsa_keygen","text":"","code":"rsa_keygen(dir = \"./inst/ssh\", password = NULL, bits = 2048)"},{"path":"https://danielvartan.github.io/lockr/reference/rsa_keygen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate and write a pair of RSA keys — rsa_keygen","text":"dir (optional) string specifying directory save generated keys (default: \"./inst/ssh\") password (optional) string specifying password protect private key. NULL, private key protected (default: NULL). bits (optional) integer number specifying length RSA key bits (default: 2048).","code":""},{"path":"https://danielvartan.github.io/lockr/reference/rsa_keygen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate and write a pair of RSA keys — rsa_keygen","text":"invisible NULL. function called  side effects .","code":""},{"path":"https://danielvartan.github.io/lockr/reference/rsa_keygen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate and write a pair of RSA keys — rsa_keygen","text":"","code":"temp_dir = tempfile(\"dir\") dir.create(temp_dir)  rsa_keygen(dir = temp_dir, password = \"test\", bits = 2048) #> Keys successfully created at '/tmp/RtmpoFK8iT/dir1d2e6b351f57'.  list.files(temp_dir) #> [1] \"id_rsa\"     \"id_rsa.pub\""},{"path":[]},{"path":"https://danielvartan.github.io/lockr/news/index.html","id":"lockr-030-2023-03-20","dir":"Changelog","previous_headings":"","what":"lockr 0.3.0 (2023-03-20)","title":"lockr 0.3.0 (2023-03-20)","text":"encryptrpak renamed lockr. encryptr devtoolsare longer import dependence list. encrypt_extdata() decrypt_extdata() superseded removed package. get_private_key(), get_public_key(), get_private_key_path(), get_public_key_path() removed package. Please use openssl reading keys. rsa_keygen() added. function facilitates creation RSA key pairs. lock_file() unlock_file() added. functions allow user encrypt/decrypt individual files. lock_dir() unlock_dir() added. functions allow user encrypt/decrypt files inside directory.","code":""}]
